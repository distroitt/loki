---
apiVersion: v1
kind: Namespace
metadata:
  name: acm
  labels:
    toolkit.fluxcd.io/tenant: studunion
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: back
  namespace: acm
spec:
  interval: 10m
  chartRef:
    kind: OCIRepository
    name: mutex-app
    namespace: common
  values:
    service:
      ports:
        - &backend_port 8000 
        - &static_port 3000

    backend_image: &backend_image ghcr.io/fcsan-bsuir/acm:v1.0.4
    host: &acm_host acm.bsuir.by

    replicaCount: 2

    deployment:
      enabled: true
      initContainers:
        collect-static:
          image: *backend_image
          command: [ "python3" ]
          args: [ "manage.py",  "collectstatic" ]
          env: &django_env
            - name: DJANGO_LOG_LEVEL
              value: info
            - name: PG_NAME
              value: acm
            - name: PG_HOST
              value: main-db-cluster-rw.cnpg-database.svc.cluster.local
            - name: PG_PORT
              value: "5432"
            - name: ALLOWED_HOSTS
              value: acm.bsuir.by
            - name: CORS_ORIGINS
              value: http://acm.bsuir.by,https://acm.bsuir.by
          envFrom: &django_envFrom
            - secretRef: 
                name: django-secret
          volumeMounts:
            - name: django-static
              mountPath: /app/staticfiles
        apply-migrations: # FIXME: replace with pre-upgrade helm job
          image: *backend_image
          command: [ "python3" ]
          args: [ "manage.py",  "migrate", "--no-input" ]
          env: *django_env
          envFrom: *django_envFrom
      containers:
        nginx-static:
          image: nginx:1.27.2
          ports:
            - containerPort: *static_port
          command: ["/bin/sh","-c"]
          args: ["sed -i 's/listen  .*/listen 3000;/g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
          volumeMounts:
            - name: django-static
              mountPath: /usr/share/nginx/html
              readOnly: true
          readinessProbe:
            httpGet:
              path: /assets/css/style.css
              port: *static_port
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

        backend:
          image: *backend_image
          command: [ "gunicorn" ]
          args: [ "config.wsgi:application", "--capture-output", "--enable-stdio-inheritance", "-b :8000" ]
          ports:
            - containerPort: *backend_port
          env: *django_env
          envFrom: *django_envFrom
          volumeMounts:
            - mountPath: /app/templates/includes/ya_metrika.html
              name: var-etc
              subPath: ya_metrika.html
          readinessProbe:
            httpGet:
              path: /
              port: *backend_port
              scheme: HTTP
              httpHeaders:
                - name: Host
                  value: *acm_host
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

    volumes:
      - name: django-static
        emptyDir: {}

    configMap:
      enabled: true
      ya_metrika.html: |
        <!-- Yandex.Metrika counter -->
        <script type="text/javascript" >
            (function (d, w, c) {
                (w[c] = w[c] || []).push(function() {
                    try {
                        w.yaCounter92493863 = new Ya.Metrika({
                            id:92493863,
                            clickmap:true,
                            trackLinks:true,
                            accurateTrackBounce:true,
                            webvisor:true
                        });
                    } catch(e) { }
                });

                var n = d.getElementsByTagName("script")[0],
                    x = "https://mc.yandex.ru/metrika/watch.js",
                    s = d.createElement("script"),
                    f = function () { n.parentNode.insertBefore(s, n); };
                for (var i = 0; i < document.scripts.length; i++) {
                    if (document.scripts[i].src === x) { return; }
                }
                s.type = "text/javascript";
                s.async = true;
                s.src = x;

                if (w.opera == "[object Opera]") {
                    d.addEventListener("DOMContentLoaded", f, false);
                } else { f(); }
            })(document, window, "yandex_metrika_callbacks");
        </script>
        <noscript><div><img src="https://mc.yandex.ru/watch/92493863" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
        <!-- /Yandex.Metrika counter -->

    persistence:
      enabled: false

    ingress:
      enabled: true
      className: "nginx"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts:
        - host: *acm_host
          paths:
            - path: /()(.*) # FIXME: wtf is going there? dirty hot-fix to match rewrite-targer :)
              pathType: ImplementationSpecific
              servicePort: *backend_port
            - path: /static(/|$)(.*)
              pathType: ImplementationSpecific
              servicePort: *static_port
      tls:
        - hosts:
          - *acm_host
          secretName: bsuir-tls
