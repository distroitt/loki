---
apiVersion: v1
kind: Namespace
metadata:
  name: acm
  labels:
    toolkit.fluxcd.io/tenant: studunion
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: back
  namespace: acm
spec:
  interval: 10m
  chartRef:
    kind: OCIRepository
    name: mutex-app
    namespace: common
  values:
    service:
      ports:
        - &backend_port 8000 
        - &static_port 3000

    backend_image: &backend_image ghcr.io/fcsan-bsuir/acm:v.0.0.1

    replicaCount: 2

    deployment:
      enabled: true
      initContainers:
        collect-static:
          image: *backend_image
          command: [ "python3" ]
          args: [ "manage.py",  "collectstatic" ]
          env: &django_env
            - name: DJANGO_LOG_LEVEL
              value: debug
            - name: DEBUG
              value: "True"
            - name: PG_NAME
              value: acm
            - name: PG_HOST
              value: main-db-cluster-rw.cnpg-database.svc.cluster.local
            - name: PG_PORT
              value: "5432"
          envFrom: &django_envFrom
            - secretRef: 
                name: django-secret
          volumeMounts:
            - name: django-static
              mountPath: /app/staticfiles
      containers:
        nginx-static:
          image: nginx:1.27.2
          ports:
            - containerPort: *static_port
          command: ["/bin/sh","-c"]
          args: ["sed -i 's/listen  .*/listen 3000;/g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
          volumeMounts:
            - name: django-static
              mountPath: /usr/share/nginx/html
              readOnly: true

        backend:
          image: *backend_image
          command: [ "gunicorn" ]
          args: [ "config.wsgi:application", "--capture-output", "--enable-stdio-inheritance", "-b :8000" ]
          ports:
            - containerPort: *backend_port
          volumeMounts:
            - name: django-static
              mountPath: /home/app/web/staticfiles
          env: *django_env
          envFrom: *django_envFrom

    volumes:
      - name: django-static
        emptyDir: {}

    persistence:
      enabled: false

    ingress:
      enabled: true
      className: "nginx"
      hosts:
        - host: olymp.bsuir.by
          paths:
            - path: /
              pathType: Prefix
              servicePort: *backend_port
            - path: /static(/|$)(.*)
              pathType: ImplementationSpecific
              servicePort: *static_port
      tls:
        - hosts:
          - olymp.bsuir.by
          secretName: bsuir-tls
